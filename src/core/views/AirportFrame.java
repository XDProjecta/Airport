/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core.views;

import core.models.Flight;
import core.models.Location;
import core.models.Passenger;
import core.models.Plane;
import com.formdev.flatlaf.FlatDarkLaf;
import core.controllers.FlightController;
import core.controllers.LocationController;
import core.controllers.PassengerController;
import core.controllers.PlaneController;
import core.controllers.UpdatePassengerController;
import core.controllers.utils.Response;
import core.controllers.utils.sorters.LocationSorter;
import core.controllers.utils.sorters.PassengerSorter;
import core.controllers.utils.sorters.PlaneSorter;
import core.models.storage.FlightStorage;
import core.models.storage.LocationStorage;
import core.models.storage.PassengerStorage;
import core.models.storage.PlaneStorage;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author edangulo
 */
public class AirportFrame extends javax.swing.JFrame {

    /**
     * Creates new form AirportFrame
     */
    private int x, y;
    private PassengerStorage passengerStorage;
    private PlaneStorage planeStorage;
    private FlightStorage flightStorage;
    private LocationStorage locationStorage;

    public AirportFrame() {
        initComponents();

        this.passengerStorage = PassengerStorage.getInstance();
        this.planeStorage = PlaneStorage.getInstance();
        this.flightStorage = FlightStorage.getInstance();
        this.locationStorage = LocationStorage.getInstance();

        this.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);

        this.generateMonths();
        this.generateDays();
        this.generateHours();
        this.generateMinutes();
        this.blockPanels();
    }

    private void blockPanels() {
        //9, 11
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {
            if (i != 9 && i != 11) {
                jTabbedPane1.setEnabledAt(i, false);
            }
        }
    }

    private void generateMonths() {
        for (int i = 1; i < 13; i++) {
            passengerMonth.addItem("" + i);
            flightDepartureMonthComBox.addItem("" + i);
            updateMonthTxt.addItem("" + i);
        }
    }

    private void generateDays() {
        for (int i = 1; i < 32; i++) {
            passengerDay.addItem("" + i);
            flightDepartureDayComBox.addItem("" + i);
            updateDayTxt.addItem("" + i);
        }
    }

    private void generateHours() {
        for (int i = 0; i < 24; i++) {
            flightDepartureHourComBox.addItem("" + i);
            flightArrivalHour.addItem("" + i);
            flightScaleHourComBox.addItem("" + i);
            delayFlightHoursComBox.addItem("" + i);
        }
    }

    private void generateMinutes() {
        for (int i = 0; i < 60; i++) {
            flightDepartureMinuteComBox.addItem("" + i);
            flightArrivalMinute.addItem("" + i);
            flightScaleMinuteComBox.addItem("" + i);
            delayFlightsMinutesComBox.addItem("" + i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new core.views.PanelRound();
        panelRound2 = new core.views.PanelRound();
        jButton13 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        administrationPanel = new javax.swing.JPanel();
        user = new javax.swing.JRadioButton();
        administrator = new javax.swing.JRadioButton();
        userSelect = new javax.swing.JComboBox<>();
        passengerRegisterPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        passengerPhoneCodeTxt = new javax.swing.JTextField();
        passengerIDTxt = new javax.swing.JTextField();
        passengerYearTxt = new javax.swing.JTextField();
        passengerCountryTxt = new javax.swing.JTextField();
        passengerPhoneTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        passengerLastNameTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        passengerMonth = new javax.swing.JComboBox<>();
        passengerFirstNameTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        passengerDay = new javax.swing.JComboBox<>();
        registerPassengerBtn = new javax.swing.JButton();
        airplaneRegisterPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        airplaneIdTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        airplaneBrandTxt = new javax.swing.JTextField();
        airplaneModelTxt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        airplaneCapacityTxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        airplaneAirline = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        createAirplaneBtn = new javax.swing.JButton();
        locationRegisterPanel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        airportIdTxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        airportNameTxt = new javax.swing.JTextField();
        airportCityTxt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        airportCountryTxt = new javax.swing.JTextField();
        airportLatitudeTxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        airportLongitud = new javax.swing.JTextField();
        createAirportBtn = new javax.swing.JButton();
        flightRegisterPanel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        flightIdTxt = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        planeComBox = new javax.swing.JComboBox<>();
        departureLocationComBox = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        flightArrivalLocationComBox = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        flightScaleLocationComBox = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        flightDepartureYearTxt = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        flightDepartureMonthComBox = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        flightDepartureDayComBox = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        flightDepartureHourComBox = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        flightDepartureMinuteComBox = new javax.swing.JComboBox<>();
        flightArrivalHour = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        flightArrivalMinute = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        flightScaleHourComBox = new javax.swing.JComboBox<>();
        flightScaleMinuteComBox = new javax.swing.JComboBox<>();
        createFlightBtn = new javax.swing.JButton();
        updateInfoPanel = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        updateIdTxt = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        updateFirstNameTxt = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        updateLastNameTxt = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        updateYearTxt = new javax.swing.JTextField();
        updateMonthTxt = new javax.swing.JComboBox<>();
        updateDayTxt = new javax.swing.JComboBox<>();
        updatePhoneTxt = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        updatePhoneCodeTxt = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        updateCountryTxt = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        addFlightPanel = new javax.swing.JPanel();
        addPassengertIdTxt = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        addFlightIdComBox = new javax.swing.JComboBox<>();
        addFlightBtn = new javax.swing.JButton();
        showFlighstPanel = new javax.swing.JPanel();
        showMyFlightsScrollPane = new javax.swing.JScrollPane();
        showMyFlightsTable = new javax.swing.JTable();
        refreshMyFlightsBtn = new javax.swing.JButton();
        showPassangersPane = new javax.swing.JPanel();
        showPassangersScrollPane = new javax.swing.JScrollPane();
        showPassangersTable = new javax.swing.JTable();
        refreshAllPassagersBtn = new javax.swing.JButton();
        showAllFlightsPanel = new javax.swing.JPanel();
        showAllFlightsPane = new javax.swing.JScrollPane();
        showAllFlightsTable = new javax.swing.JTable();
        refreshAllFlightsBtn = new javax.swing.JButton();
        refreshAllPlanesPane = new javax.swing.JPanel();
        refreshAllPlanesBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        showAllPlanesTable = new javax.swing.JTable();
        showAllLocationsPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        showAllLocationsTable = new javax.swing.JTable();
        refreshAllLocationsBtn = new javax.swing.JButton();
        delayFlightPanel = new javax.swing.JPanel();
        delayFlightHoursComBox = new javax.swing.JComboBox<>();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        delayFlightIdComBox = new javax.swing.JComboBox<>();
        jLabel48 = new javax.swing.JLabel();
        delayFlightsMinutesComBox = new javax.swing.JComboBox<>();
        delayFlightsBtn = new javax.swing.JButton();
        panelRound3 = new core.views.PanelRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelRound1.setRadius(40);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelRound2MouseDragged(evt);
            }
        });
        panelRound2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelRound2MousePressed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButton13.setText("X");
        jButton13.setBorderPainted(false);
        jButton13.setContentAreaFilled(false);
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound2Layout.createSequentialGroup()
                .addContainerGap(1083, Short.MAX_VALUE)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addComponent(jButton13)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        panelRound1.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, -1));

        jTabbedPane1.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N

        administrationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        user.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        user.setText("User");
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        administrationPanel.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, -1, -1));

        administrator.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        administrator.setText("Administrator");
        administrator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administratorActionPerformed(evt);
            }
        });
        administrationPanel.add(administrator, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 164, -1, -1));

        userSelect.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        userSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User" }));
        userSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSelectActionPerformed(evt);
            }
        });
        administrationPanel.add(userSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 130, -1));

        jTabbedPane1.addTab("Administration", administrationPanel);

        passengerRegisterPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel1.setText("Country:");
        passengerRegisterPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel2.setText("ID:");
        passengerRegisterPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel3.setText("First Name:");
        passengerRegisterPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel4.setText("Last Name:");
        passengerRegisterPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel5.setText("Birthdate:");
        passengerRegisterPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel6.setText("+");
        passengerRegisterPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 20, -1));

        passengerPhoneCodeTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerPhoneCodeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passengerPhoneCodeTxtActionPerformed(evt);
            }
        });
        passengerRegisterPanel.add(passengerPhoneCodeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 50, -1));

        passengerIDTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegisterPanel.add(passengerIDTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 130, -1));

        passengerYearTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerYearTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passengerYearTxtActionPerformed(evt);
            }
        });
        passengerRegisterPanel.add(passengerYearTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 90, -1));

        passengerCountryTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegisterPanel.add(passengerCountryTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 130, -1));

        passengerPhoneTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerPhoneTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passengerPhoneTxtActionPerformed(evt);
            }
        });
        passengerRegisterPanel.add(passengerPhoneTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 130, -1));

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel7.setText("Phone:");
        passengerRegisterPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel8.setText("-");
        passengerRegisterPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 30, -1));

        passengerLastNameTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegisterPanel.add(passengerLastNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 130, -1));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel9.setText("-");
        passengerRegisterPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 30, -1));

        passengerMonth.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));
        passengerMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passengerMonthActionPerformed(evt);
            }
        });
        passengerRegisterPanel.add(passengerMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        passengerFirstNameTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerRegisterPanel.add(passengerFirstNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 130, -1));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel10.setText("-");
        passengerRegisterPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 280, 30, -1));

        passengerDay.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        passengerDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));
        passengerRegisterPanel.add(passengerDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, -1, -1));

        registerPassengerBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        registerPassengerBtn.setText("Register");
        registerPassengerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerPassengerBtnActionPerformed(evt);
            }
        });
        passengerRegisterPanel.add(registerPassengerBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, -1, -1));

        jTabbedPane1.addTab("Passenger registration", passengerRegisterPanel);

        airplaneRegisterPanel.setLayout(null);

        jLabel11.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel11.setText("ID:");
        airplaneRegisterPanel.add(jLabel11);
        jLabel11.setBounds(53, 96, 22, 25);

        airplaneIdTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegisterPanel.add(airplaneIdTxt);
        airplaneIdTxt.setBounds(180, 93, 130, 31);

        jLabel12.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel12.setText("Brand:");
        airplaneRegisterPanel.add(jLabel12);
        jLabel12.setBounds(53, 157, 50, 25);

        airplaneBrandTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegisterPanel.add(airplaneBrandTxt);
        airplaneBrandTxt.setBounds(180, 154, 130, 31);

        airplaneModelTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegisterPanel.add(airplaneModelTxt);
        airplaneModelTxt.setBounds(180, 213, 130, 31);

        jLabel13.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel13.setText("Model:");
        airplaneRegisterPanel.add(jLabel13);
        jLabel13.setBounds(53, 216, 55, 25);

        airplaneCapacityTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegisterPanel.add(airplaneCapacityTxt);
        airplaneCapacityTxt.setBounds(180, 273, 130, 31);

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel14.setText("Max Capacity:");
        airplaneRegisterPanel.add(jLabel14);
        jLabel14.setBounds(53, 276, 109, 25);

        airplaneAirline.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airplaneRegisterPanel.add(airplaneAirline);
        airplaneAirline.setBounds(180, 333, 130, 31);

        jLabel15.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel15.setText("Airline:");
        airplaneRegisterPanel.add(jLabel15);
        jLabel15.setBounds(53, 336, 70, 25);

        createAirplaneBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        createAirplaneBtn.setText("Create");
        createAirplaneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAirplaneBtnActionPerformed(evt);
            }
        });
        airplaneRegisterPanel.add(createAirplaneBtn);
        createAirplaneBtn.setBounds(490, 480, 120, 40);

        jTabbedPane1.addTab("Airplane registration", airplaneRegisterPanel);

        jLabel16.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel16.setText("Airport ID:");

        airportIdTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel17.setText("Airport name:");

        airportNameTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        airportCityTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel18.setText("Airport city:");

        jLabel19.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel19.setText("Airport country:");

        airportCountryTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        airportLatitudeTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel20.setText("Airport latitude:");

        jLabel21.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel21.setText("Airport longitude:");

        airportLongitud.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        createAirportBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        createAirportBtn.setText("Create");
        createAirportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAirportBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout locationRegisterPanelLayout = new javax.swing.GroupLayout(locationRegisterPanel);
        locationRegisterPanel.setLayout(locationRegisterPanelLayout);
        locationRegisterPanelLayout.setHorizontalGroup(
            locationRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(locationRegisterPanelLayout.createSequentialGroup()
                .addGroup(locationRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(locationRegisterPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(locationRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(80, 80, 80)
                        .addGroup(locationRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(airportLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airportIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airportNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airportCityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airportCountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airportLatitudeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(locationRegisterPanelLayout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(createAirportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(515, 515, 515))
        );
        locationRegisterPanelLayout.setVerticalGroup(
            locationRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(locationRegisterPanelLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(locationRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(locationRegisterPanelLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel17)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel18)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel19)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel20))
                    .addGroup(locationRegisterPanelLayout.createSequentialGroup()
                        .addComponent(airportIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(airportNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(airportCityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(airportCountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(airportLatitudeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(locationRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(airportLongitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(createAirportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        jTabbedPane1.addTab("Location registration", locationRegisterPanel);

        jLabel22.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel22.setText("ID:");

        flightIdTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel23.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel23.setText("Plane:");

        planeComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        planeComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plane" }));
        planeComBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planeComBoxActionPerformed(evt);
            }
        });

        departureLocationComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        departureLocationComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));
        departureLocationComBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departureLocationComBoxActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel24.setText("Departure location:");

        flightArrivalLocationComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightArrivalLocationComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabel25.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel25.setText("Arrival location:");

        jLabel26.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel26.setText("Scale location:");

        flightScaleLocationComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightScaleLocationComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabel27.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel27.setText("Duration:");

        jLabel28.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel28.setText("Duration:");

        jLabel29.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel29.setText("Departure date:");

        flightDepartureYearTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel30.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel30.setText("-");

        flightDepartureMonthComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightDepartureMonthComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        jLabel31.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel31.setText("-");

        flightDepartureDayComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightDepartureDayComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        jLabel32.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel32.setText("-");

        flightDepartureHourComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightDepartureHourComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel33.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel33.setText("-");

        flightDepartureMinuteComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightDepartureMinuteComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        flightArrivalHour.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightArrivalHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel34.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel34.setText("-");

        flightArrivalMinute.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightArrivalMinute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        jLabel35.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel35.setText("-");

        flightScaleHourComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightScaleHourComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        flightScaleMinuteComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        flightScaleMinuteComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        createFlightBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        createFlightBtn.setText("Create");
        createFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createFlightBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout flightRegisterPanelLayout = new javax.swing.GroupLayout(flightRegisterPanel);
        flightRegisterPanel.setLayout(flightRegisterPanelLayout);
        flightRegisterPanelLayout.setHorizontalGroup(
            flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(flightScaleLocationComBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightRegisterPanelLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(flightArrivalLocationComBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(46, 46, 46)
                        .addComponent(departureLocationComBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                        .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(flightIdTxt)
                            .addComponent(planeComBox, 0, 130, Short.MAX_VALUE))))
                .addGap(45, 45, 45)
                .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29))
                .addGap(18, 18, 18)
                .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                        .addComponent(flightDepartureYearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(flightDepartureMonthComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(flightDepartureDayComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(flightDepartureHourComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(flightDepartureMinuteComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                        .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                                .addComponent(flightArrivalHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(flightArrivalMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                                .addComponent(flightScaleHourComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(flightScaleMinuteComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightRegisterPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createFlightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(530, 530, 530))
        );
        flightRegisterPanelLayout.setVerticalGroup(
            flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel22))
                    .addComponent(flightIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(planeComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(flightDepartureHourComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(flightDepartureMinuteComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(flightRegisterPanelLayout.createSequentialGroup()
                        .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel24)
                                .addComponent(departureLocationComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel29))
                            .addComponent(flightDepartureYearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(flightDepartureMonthComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31)
                            .addComponent(flightDepartureDayComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel25)
                                .addComponent(flightArrivalLocationComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28))
                            .addComponent(flightArrivalHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34)
                            .addComponent(flightArrivalMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flightScaleHourComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35)
                            .addComponent(flightScaleMinuteComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(flightRegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel26)
                                .addComponent(flightScaleLocationComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(createFlightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        jTabbedPane1.addTab("Flight registration", flightRegisterPanel);

        jLabel36.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel36.setText("ID:");

        updateIdTxt.setEditable(false);
        updateIdTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateIdTxt.setEnabled(false);

        jLabel37.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel37.setText("First Name:");

        updateFirstNameTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel38.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel38.setText("Last Name:");

        updateLastNameTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel39.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel39.setText("Birthdate:");

        updateYearTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        updateMonthTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateMonthTxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        updateDayTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateDayTxt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        updatePhoneTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel40.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel40.setText("-");

        updatePhoneCodeTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel41.setText("+");

        jLabel42.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel42.setText("Phone:");

        jLabel43.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel43.setText("Country:");

        updateCountryTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        updateBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateInfoPanelLayout = new javax.swing.GroupLayout(updateInfoPanel);
        updateInfoPanel.setLayout(updateInfoPanelLayout);
        updateInfoPanelLayout.setHorizontalGroup(
            updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateInfoPanelLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel36)
                                .addGap(108, 108, 108)
                                .addComponent(updateIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel37)
                                .addGap(41, 41, 41)
                                .addComponent(updateFirstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addGap(43, 43, 43)
                                .addComponent(updateLastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addGap(55, 55, 55)
                                .addComponent(updateYearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(updateMonthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(updateDayTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel42)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(updatePhoneCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(updatePhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addGap(63, 63, 63)
                                .addComponent(updateCountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(updateInfoPanelLayout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(updateBtn)))
                .addContainerGap(555, Short.MAX_VALUE))
        );
        updateInfoPanelLayout.setVerticalGroup(
            updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateInfoPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(updateIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addComponent(updateFirstNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38)
                    .addComponent(updateLastNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39)
                    .addComponent(updateYearTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateMonthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateDayTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel42)
                    .addComponent(jLabel41)
                    .addComponent(updatePhoneCodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(updatePhoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(updateInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43)
                    .addComponent(updateCountryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateBtn)
                .addGap(113, 113, 113))
        );

        jTabbedPane1.addTab("Update info", updateInfoPanel);

        addPassengertIdTxt.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        addPassengertIdTxt.setEnabled(false);

        jLabel44.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel44.setText("ID:");

        jLabel45.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel45.setText("Flight:");

        addFlightIdComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        addFlightIdComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flight" }));

        addFlightBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        addFlightBtn.setText("Add");
        addFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFlightBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addFlightPanelLayout = new javax.swing.GroupLayout(addFlightPanel);
        addFlightPanel.setLayout(addFlightPanelLayout);
        addFlightPanelLayout.setHorizontalGroup(
            addFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFlightPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(addFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44)
                    .addComponent(jLabel45))
                .addGap(79, 79, 79)
                .addGroup(addFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addFlightIdComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPassengertIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(829, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addFlightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addFlightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(509, 509, 509))
        );
        addFlightPanelLayout.setVerticalGroup(
            addFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFlightPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(addFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addFlightPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel44))
                    .addComponent(addPassengertIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(addFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(addFlightIdComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(addFlightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        jTabbedPane1.addTab("Add to flight", addFlightPanel);

        showMyFlightsTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        showMyFlightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Departure Date", "Arrival Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showMyFlightsScrollPane.setViewportView(showMyFlightsTable);

        refreshMyFlightsBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        refreshMyFlightsBtn.setText("Refresh");
        refreshMyFlightsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshMyFlightsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout showFlighstPanelLayout = new javax.swing.GroupLayout(showFlighstPanel);
        showFlighstPanel.setLayout(showFlighstPanelLayout);
        showFlighstPanelLayout.setHorizontalGroup(
            showFlighstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showFlighstPanelLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(showMyFlightsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showFlighstPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(refreshMyFlightsBtn)
                .addGap(527, 527, 527))
        );
        showFlighstPanelLayout.setVerticalGroup(
            showFlighstPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showFlighstPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(showMyFlightsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(refreshMyFlightsBtn)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Show my flights", showFlighstPanel);

        showPassangersTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        showPassangersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birthdate", "Age", "Phone", "Country", "Num Flight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showPassangersScrollPane.setViewportView(showPassangersTable);

        refreshAllPassagersBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        refreshAllPassagersBtn.setText("Refresh");
        refreshAllPassagersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshAllPassagersBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout showPassangersPaneLayout = new javax.swing.GroupLayout(showPassangersPane);
        showPassangersPane.setLayout(showPassangersPaneLayout);
        showPassangersPaneLayout.setHorizontalGroup(
            showPassangersPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showPassangersPaneLayout.createSequentialGroup()
                .addGroup(showPassangersPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showPassangersPaneLayout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(refreshAllPassagersBtn))
                    .addGroup(showPassangersPaneLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(showPassangersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        showPassangersPaneLayout.setVerticalGroup(
            showPassangersPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showPassangersPaneLayout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(showPassangersScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(refreshAllPassagersBtn)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Show all passengers", showPassangersPane);

        showAllFlightsTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        showAllFlightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Departure Airport ID", "Arrival Airport ID", "Scale Airport ID", "Departure Date", "Arrival Date", "Plane ID", "Number Passengers"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        showAllFlightsPane.setViewportView(showAllFlightsTable);

        refreshAllFlightsBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        refreshAllFlightsBtn.setText("Refresh");
        refreshAllFlightsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshAllFlightsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout showAllFlightsPanelLayout = new javax.swing.GroupLayout(showAllFlightsPanel);
        showAllFlightsPanel.setLayout(showAllFlightsPanelLayout);
        showAllFlightsPanelLayout.setHorizontalGroup(
            showAllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showAllFlightsPanelLayout.createSequentialGroup()
                .addGroup(showAllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showAllFlightsPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(showAllFlightsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(showAllFlightsPanelLayout.createSequentialGroup()
                        .addGap(521, 521, 521)
                        .addComponent(refreshAllFlightsBtn)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        showAllFlightsPanelLayout.setVerticalGroup(
            showAllFlightsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showAllFlightsPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(showAllFlightsPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(refreshAllFlightsBtn)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Show all flights", showAllFlightsPanel);

        refreshAllPlanesBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        refreshAllPlanesBtn.setText("Refresh");
        refreshAllPlanesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshAllPlanesBtnActionPerformed(evt);
            }
        });

        showAllPlanesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Brand", "Model", "Max Capacity", "Airline", "Number Flights"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(showAllPlanesTable);

        javax.swing.GroupLayout refreshAllPlanesPaneLayout = new javax.swing.GroupLayout(refreshAllPlanesPane);
        refreshAllPlanesPane.setLayout(refreshAllPlanesPaneLayout);
        refreshAllPlanesPaneLayout.setHorizontalGroup(
            refreshAllPlanesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(refreshAllPlanesPaneLayout.createSequentialGroup()
                .addGroup(refreshAllPlanesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(refreshAllPlanesPaneLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(refreshAllPlanesBtn))
                    .addGroup(refreshAllPlanesPaneLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        refreshAllPlanesPaneLayout.setVerticalGroup(
            refreshAllPlanesPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, refreshAllPlanesPaneLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(refreshAllPlanesBtn)
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Show all planes", refreshAllPlanesPane);

        showAllLocationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airport ID", "Airport Name", "City", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(showAllLocationsTable);

        refreshAllLocationsBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        refreshAllLocationsBtn.setText("Refresh");
        refreshAllLocationsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshAllLocationsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout showAllLocationsPanelLayout = new javax.swing.GroupLayout(showAllLocationsPanel);
        showAllLocationsPanel.setLayout(showAllLocationsPanelLayout);
        showAllLocationsPanelLayout.setHorizontalGroup(
            showAllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showAllLocationsPanelLayout.createSequentialGroup()
                .addGroup(showAllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(showAllLocationsPanelLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(refreshAllLocationsBtn))
                    .addGroup(showAllLocationsPanelLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        showAllLocationsPanelLayout.setVerticalGroup(
            showAllLocationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, showAllLocationsPanelLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(refreshAllLocationsBtn)
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Show all locations", showAllLocationsPanel);

        delayFlightHoursComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        delayFlightHoursComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));
        delayFlightHoursComBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delayFlightHoursComBoxActionPerformed(evt);
            }
        });

        jLabel46.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel46.setText("Hours:");

        jLabel47.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel47.setText("ID:");

        delayFlightIdComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        delayFlightIdComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID" }));
        delayFlightIdComBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delayFlightIdComBoxActionPerformed(evt);
            }
        });

        jLabel48.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel48.setText("Minutes:");

        delayFlightsMinutesComBox.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        delayFlightsMinutesComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        delayFlightsBtn.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        delayFlightsBtn.setText("Delay");
        delayFlightsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delayFlightsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout delayFlightPanelLayout = new javax.swing.GroupLayout(delayFlightPanel);
        delayFlightPanel.setLayout(delayFlightPanelLayout);
        delayFlightPanelLayout.setHorizontalGroup(
            delayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(delayFlightPanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(delayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(delayFlightPanelLayout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delayFlightsMinutesComBox, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(delayFlightPanelLayout.createSequentialGroup()
                        .addGroup(delayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47)
                            .addComponent(jLabel46))
                        .addGap(79, 79, 79)
                        .addGroup(delayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(delayFlightHoursComBox, 0, 105, Short.MAX_VALUE)
                            .addComponent(delayFlightIdComBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(820, 820, 820))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, delayFlightPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(delayFlightsBtn)
                .addGap(531, 531, 531))
        );
        delayFlightPanelLayout.setVerticalGroup(
            delayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(delayFlightPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(delayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(delayFlightIdComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(delayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(delayFlightHoursComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(delayFlightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(delayFlightsMinutesComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(delayFlightsBtn)
                .addGap(33, 33, 33))
        );

        jTabbedPane1.addTab("Delay flight", delayFlightPanel);

        panelRound1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 1150, 620));

        javax.swing.GroupLayout panelRound3Layout = new javax.swing.GroupLayout(panelRound3);
        panelRound3.setLayout(panelRound3Layout);
        panelRound3Layout.setHorizontalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        panelRound3Layout.setVerticalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        panelRound1.add(panelRound3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 660, 1150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void panelRound2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_panelRound2MousePressed

    private void panelRound2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_panelRound2MouseDragged

    private void administratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administratorActionPerformed
        if (user.isSelected()) {
            user.setSelected(false);
            userSelect.setSelectedIndex(0);

        }
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {
            jTabbedPane1.setEnabledAt(i, true);
        }
        jTabbedPane1.setEnabledAt(5, false);
        jTabbedPane1.setEnabledAt(6, false);
    }//GEN-LAST:event_administratorActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        if (administrator.isSelected()) {
            administrator.setSelected(false);
        }
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {

            jTabbedPane1.setEnabledAt(i, false);

        }
        jTabbedPane1.setEnabledAt(9, true);
        jTabbedPane1.setEnabledAt(5, true);
        jTabbedPane1.setEnabledAt(6, true);
        jTabbedPane1.setEnabledAt(7, true);
        jTabbedPane1.setEnabledAt(11, true);
    }//GEN-LAST:event_userActionPerformed

    private void registerPassengerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerPassengerBtnActionPerformed
        String id = passengerIDTxt.getText();
        String firstname = passengerFirstNameTxt.getText();
        String lastname = passengerLastNameTxt.getText();
        String year = passengerYearTxt.getText();
        String month = passengerMonth.getItemAt(passengerMonth.getSelectedIndex());
        String day = passengerDay.getItemAt(passengerDay.getSelectedIndex());
        String phoneCode = passengerPhoneCodeTxt.getText();
        String phone = passengerPhoneTxt.getText();
        String country = passengerCountryTxt.getText();

        Response response = PassengerController.registerPassenger(id, firstname, lastname, year, month, day, phoneCode, phone, country);

        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Success", JOptionPane.INFORMATION_MESSAGE);
            // Limpiar campos
            passengerIDTxt.setText("");
            passengerFirstNameTxt.setText("");
            passengerLastNameTxt.setText("");
            passengerYearTxt.setText("");
            passengerPhoneCodeTxt.setText("");
            passengerPhoneTxt.setText("");
            passengerCountryTxt.setText("");
            passengerMonth.setSelectedIndex(0);
            passengerDay.setSelectedIndex(0);
            ArrayList<Passenger> passengers = PassengerSorter.passengersSort(this.passengerStorage.getAll());

            this.userSelect.addItem("Select User");

            for (Passenger passenger : passengers) {
                this.userSelect.addItem("" + passenger.getId());
                System.out.println("New: " + passenger.getId());
            }
        }


    }//GEN-LAST:event_registerPassengerBtnActionPerformed

    private void createAirplaneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAirplaneBtnActionPerformed
        // TODO add your handling code here:
        String id = airplaneIdTxt.getText();
        String brand = airplaneBrandTxt.getText();
        String model = airplaneModelTxt.getText();
        String maxCapacity = airplaneCapacityTxt.getText();
        String airline = airplaneAirline.getText();
        Response response = PlaneController.registerPlane(id, brand, model, maxCapacity, airline, brand, model);

        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);
            airplaneIdTxt.setText("");
            airplaneBrandTxt.setText("");
            airplaneModelTxt.setText("");
            airplaneCapacityTxt.setText("");
            airplaneAirline.setText("");
            this.planeComBox.removeAllItems();
            ArrayList<Plane> planes = PlaneSorter.planes(this.planeStorage.getAll());
            this.planeComBox.addItem("Plane");
            for (Plane plane : planes) {
                this.planeComBox.addItem("" + plane.getId());
                System.out.println("New: " + plane.getId());
            }
        }

    }//GEN-LAST:event_createAirplaneBtnActionPerformed

    private void createAirportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAirportBtnActionPerformed
        String id = airportIdTxt.getText();
        String name = airportNameTxt.getText();
        String city = airportCityTxt.getText();
        String country = airportCountryTxt.getText();
        String latitude = airportLatitudeTxt.getText();
        String longitude = airportLongitud.getText();

        Response response = LocationController.registerLocation(id, name, city, country, latitude, longitude);

        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Success", JOptionPane.INFORMATION_MESSAGE);

            // Limpiar campos de texto
            airportIdTxt.setText("");
            airportNameTxt.setText("");
            airportCityTxt.setText("");
            airportCountryTxt.setText("");
            airportLatitudeTxt.setText("");
            airportLongitud.setText("");

            // Limpiar los combobox
            departureLocationComBox.removeAllItems();
            flightArrivalLocationComBox.removeAllItems();
            flightScaleLocationComBox.removeAllItems();

            // Agregar nuevos elementos desde el storage ordenado
            ArrayList<Location> locations = LocationSorter.locations(this.locationStorage.getAll());
            departureLocationComBox.addItem("Location");
            flightArrivalLocationComBox.addItem("Location");
            flightScaleLocationComBox.addItem("Location");

            for (Location location : locations) {
                departureLocationComBox.addItem(location.getAirportId());
                flightArrivalLocationComBox.addItem(location.getAirportId());
                flightScaleLocationComBox.addItem(location.getAirportId());
                System.out.println("New: " + location.getAirportId());
            }
        }
    }//GEN-LAST:event_createAirportBtnActionPerformed

    private void createFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createFlightBtnActionPerformed
        String id = flightIdTxt.getText();
        String planeId = planeComBox.getItemAt(planeComBox.getSelectedIndex());
        String departureLocationId = departureLocationComBox.getItemAt(departureLocationComBox.getSelectedIndex());
        String arrivalLocationId = flightArrivalLocationComBox.getItemAt(flightArrivalLocationComBox.getSelectedIndex());
        String scaleLocationId = flightScaleLocationComBox.getItemAt(flightScaleLocationComBox.getSelectedIndex());

        String year = flightDepartureYearTxt.getText();
        String month = flightDepartureMonthComBox.getItemAt(flightDepartureMonthComBox.getSelectedIndex());
        String day = flightDepartureDayComBox.getItemAt(flightDepartureDayComBox.getSelectedIndex());
        String hour = flightDepartureHourComBox.getItemAt(flightDepartureHourComBox.getSelectedIndex());
        String minutes = flightDepartureMinuteComBox.getItemAt(flightDepartureMinuteComBox.getSelectedIndex());

        String hoursDurationsArrival = flightArrivalHour.getItemAt(flightArrivalHour.getSelectedIndex());
        String minutesDurationsArrival = flightArrivalMinute.getItemAt(flightArrivalMinute.getSelectedIndex());
        String hoursDurationsScale = flightScaleHourComBox.getItemAt(flightScaleHourComBox.getSelectedIndex());
        String minutesDurationsScale = flightScaleMinuteComBox.getItemAt(flightScaleMinuteComBox.getSelectedIndex());

        // Se invoca el controlador que valida y registra el vuelo
        Response response = FlightController.registerFlight(
                id, planeId, departureLocationId, arrivalLocationId, scaleLocationId,
                year, month, day, hour, minutes,
                hoursDurationsArrival, minutesDurationsArrival,
                hoursDurationsScale, minutesDurationsScale
        );

        // Se responde con diálogos dependiendo del resultado
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);
            // Se limpia el formulario
            flightIdTxt.setText("");
            planeComBox.setSelectedIndex(0);
            departureLocationComBox.setSelectedIndex(0);
            flightArrivalLocationComBox.setSelectedIndex(0);
            flightScaleLocationComBox.setSelectedIndex(0);
            flightDepartureYearTxt.setText("");
            flightDepartureMonthComBox.setSelectedIndex(0);
            flightDepartureDayComBox.setSelectedIndex(0);
            flightDepartureHourComBox.setSelectedIndex(0);
            flightDepartureMinuteComBox.setSelectedIndex(0);
            flightArrivalHour.setSelectedIndex(0);
            flightArrivalMinute.setSelectedIndex(0);
            flightScaleHourComBox.setSelectedIndex(0);
            flightScaleMinuteComBox.setSelectedIndex(0);

            this.addFlightIdComBox.addItem(id);
        }

    }//GEN-LAST:event_createFlightBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
           // Obtener todos los valores directamente desde los componentes del formulario
    String id = updateIdTxt.getText();
    String firstname = updateFirstNameTxt.getText();
    String lastname = updateLastNameTxt.getText();
    String year = updateYearTxt.getText();
    String month = updateMonthTxt.getItemAt(updateMonthTxt.getSelectedIndex());
    String day = updateDayTxt.getItemAt(updateDayTxt.getSelectedIndex());
    String phoneCode = updatePhoneCodeTxt.getText();
    String phone = updatePhoneTxt.getText();
    String country = updateCountryTxt.getText();

    Response response = UpdatePassengerController.passengerUpdateRegistration(id, firstname, lastname, year, month, day, phoneCode, phone, country);

    if (response.getStatus() >= 500) {
        JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
    } else if (response.getStatus() >= 400) {
        JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(null, response.getMessage(), "Success", JOptionPane.INFORMATION_MESSAGE);

        // Limpiar campos
        updateIdTxt.setText("");
        updateFirstNameTxt.setText("");
        updateLastNameTxt.setText("");
        updateYearTxt.setText("");
        updateMonthTxt.setSelectedIndex(0);
        updateDayTxt.setSelectedIndex(0);
        updatePhoneCodeTxt.setText("");
        updatePhoneTxt.setText("");
        updateCountryTxt.setText("");
    }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void addFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFlightBtnActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(addPassengertIdTxt.getText());
        String flightId = addFlightIdComBox.getItemAt(addFlightIdComBox.getSelectedIndex());

        Passenger passenger = null;
        Flight flight = null;

        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        passenger.addFlight(flight);
        flight.addPassenger(passenger);
    }//GEN-LAST:event_addFlightBtnActionPerformed

    private void delayFlightsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delayFlightsBtnActionPerformed
        // TODO add your handling code here:
        String flightId = delayFlightIdComBox.getItemAt(delayFlightIdComBox.getSelectedIndex());
        int hours = Integer.parseInt(delayFlightHoursComBox.getItemAt(delayFlightHoursComBox.getSelectedIndex()));
        int minutes = Integer.parseInt(delayFlightsMinutesComBox.getItemAt(delayFlightsMinutesComBox.getSelectedIndex()));

        Flight flight = null;
        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        flight.delay(hours, minutes);
    }//GEN-LAST:event_delayFlightsBtnActionPerformed

    private void refreshMyFlightsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshMyFlightsBtnActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(userSelect.getItemAt(userSelect.getSelectedIndex()));

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        ArrayList<Flight> flights = passenger.getFlights();
        DefaultTableModel model = (DefaultTableModel) showMyFlightsTable.getModel();
        model.setRowCount(0);
        for (Flight flight : flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureDate(), flight.calculateArrivalDate()});
        }
    }//GEN-LAST:event_refreshMyFlightsBtnActionPerformed

    private void refreshAllPassagersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshAllPassagersBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) showPassangersTable.getModel();
        model.setRowCount(0);
        for (Passenger passenger : this.passengers) {
            model.addRow(new Object[]{passenger.getId(), passenger.getFullname(), passenger.getBirthDate(), passenger.calculateAge(), passenger.generateFullPhone(), passenger.getCountry(), passenger.getNumFlights()});
        }
    }//GEN-LAST:event_refreshAllPassagersBtnActionPerformed

    private void refreshAllFlightsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshAllFlightsBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) showAllFlightsTable.getModel();
        model.setRowCount(0);
        for (Flight flight : this.flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureLocation().getAirportId(), flight.getArrivalLocation().getAirportId(), (flight.getScaleLocation() == null ? "-" : flight.getScaleLocation().getAirportId()), flight.getDepartureDate(), flight.calculateArrivalDate(), flight.getPlane().getId(), flight.getNumPassengers()});
        }
    }//GEN-LAST:event_refreshAllFlightsBtnActionPerformed

    private void refreshAllPlanesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshAllPlanesBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) showAllPlanesTable.getModel();
        model.setRowCount(0);
        for (Plane plane : this.planes) {
            model.addRow(new Object[]{plane.getId(), plane.getBrand(), plane.getModel(), plane.getMaxCapacity(), plane.getAirline(), plane.getNumFlights()});
        }
    }//GEN-LAST:event_refreshAllPlanesBtnActionPerformed

    private void refreshAllLocationsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshAllLocationsBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) showAllLocationsTable.getModel();
        model.setRowCount(0);
        for (Location location : this.locations) {
            model.addRow(new Object[]{location.getAirportId(), location.getAirportName(), location.getAirportCity(), location.getAirportCountry()});
        }
    }//GEN-LAST:event_refreshAllLocationsBtnActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void userSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSelectActionPerformed
        try {
            String id = userSelect.getSelectedItem().toString();
            if (!id.equals(userSelect.getItemAt(0))) {
                updateIdTxt.setText(id);
                addPassengertIdTxt.setText(id);
            } else {
                updateIdTxt.setText("");
                addPassengertIdTxt.setText("");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_userSelectActionPerformed

    private void passengerYearTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passengerYearTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passengerYearTxtActionPerformed

    private void passengerPhoneCodeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passengerPhoneCodeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passengerPhoneCodeTxtActionPerformed

    private void passengerPhoneTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passengerPhoneTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passengerPhoneTxtActionPerformed

    private void delayFlightHoursComBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delayFlightHoursComBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delayFlightHoursComBoxActionPerformed

    private void departureLocationComBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departureLocationComBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departureLocationComBoxActionPerformed

    private void passengerMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passengerMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passengerMonthActionPerformed

    private void planeComBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planeComBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_planeComBoxActionPerformed

    private void delayFlightIdComBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delayFlightIdComBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delayFlightIdComBoxActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFlightBtn;
    private javax.swing.JComboBox<String> addFlightIdComBox;
    private javax.swing.JPanel addFlightPanel;
    private javax.swing.JTextField addPassengertIdTxt;
    private javax.swing.JPanel administrationPanel;
    private javax.swing.JRadioButton administrator;
    private javax.swing.JTextField airplaneAirline;
    private javax.swing.JTextField airplaneBrandTxt;
    private javax.swing.JTextField airplaneCapacityTxt;
    private javax.swing.JTextField airplaneIdTxt;
    private javax.swing.JTextField airplaneModelTxt;
    private javax.swing.JPanel airplaneRegisterPanel;
    private javax.swing.JTextField airportCityTxt;
    private javax.swing.JTextField airportCountryTxt;
    private javax.swing.JTextField airportIdTxt;
    private javax.swing.JTextField airportLatitudeTxt;
    private javax.swing.JTextField airportLongitud;
    private javax.swing.JTextField airportNameTxt;
    private javax.swing.JButton createAirplaneBtn;
    private javax.swing.JButton createAirportBtn;
    private javax.swing.JButton createFlightBtn;
    private javax.swing.JComboBox<String> delayFlightHoursComBox;
    private javax.swing.JComboBox<String> delayFlightIdComBox;
    private javax.swing.JPanel delayFlightPanel;
    private javax.swing.JButton delayFlightsBtn;
    private javax.swing.JComboBox<String> delayFlightsMinutesComBox;
    private javax.swing.JComboBox<String> departureLocationComBox;
    private javax.swing.JComboBox<String> flightArrivalHour;
    private javax.swing.JComboBox<String> flightArrivalLocationComBox;
    private javax.swing.JComboBox<String> flightArrivalMinute;
    private javax.swing.JComboBox<String> flightDepartureDayComBox;
    private javax.swing.JComboBox<String> flightDepartureHourComBox;
    private javax.swing.JComboBox<String> flightDepartureMinuteComBox;
    private javax.swing.JComboBox<String> flightDepartureMonthComBox;
    private javax.swing.JTextField flightDepartureYearTxt;
    private javax.swing.JTextField flightIdTxt;
    private javax.swing.JPanel flightRegisterPanel;
    private javax.swing.JComboBox<String> flightScaleHourComBox;
    private javax.swing.JComboBox<String> flightScaleLocationComBox;
    private javax.swing.JComboBox<String> flightScaleMinuteComBox;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel locationRegisterPanel;
    private core.views.PanelRound panelRound1;
    private core.views.PanelRound panelRound2;
    private core.views.PanelRound panelRound3;
    private javax.swing.JTextField passengerCountryTxt;
    private javax.swing.JComboBox<String> passengerDay;
    private javax.swing.JTextField passengerFirstNameTxt;
    private javax.swing.JTextField passengerIDTxt;
    private javax.swing.JTextField passengerLastNameTxt;
    private javax.swing.JComboBox<String> passengerMonth;
    private javax.swing.JTextField passengerPhoneCodeTxt;
    private javax.swing.JTextField passengerPhoneTxt;
    private javax.swing.JPanel passengerRegisterPanel;
    private javax.swing.JTextField passengerYearTxt;
    private javax.swing.JComboBox<String> planeComBox;
    private javax.swing.JButton refreshAllFlightsBtn;
    private javax.swing.JButton refreshAllLocationsBtn;
    private javax.swing.JButton refreshAllPassagersBtn;
    private javax.swing.JButton refreshAllPlanesBtn;
    private javax.swing.JPanel refreshAllPlanesPane;
    private javax.swing.JButton refreshMyFlightsBtn;
    private javax.swing.JButton registerPassengerBtn;
    private javax.swing.JScrollPane showAllFlightsPane;
    private javax.swing.JPanel showAllFlightsPanel;
    private javax.swing.JTable showAllFlightsTable;
    private javax.swing.JPanel showAllLocationsPanel;
    private javax.swing.JTable showAllLocationsTable;
    private javax.swing.JTable showAllPlanesTable;
    private javax.swing.JPanel showFlighstPanel;
    private javax.swing.JScrollPane showMyFlightsScrollPane;
    private javax.swing.JTable showMyFlightsTable;
    private javax.swing.JPanel showPassangersPane;
    private javax.swing.JScrollPane showPassangersScrollPane;
    private javax.swing.JTable showPassangersTable;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField updateCountryTxt;
    private javax.swing.JComboBox<String> updateDayTxt;
    private javax.swing.JTextField updateFirstNameTxt;
    private javax.swing.JTextField updateIdTxt;
    private javax.swing.JPanel updateInfoPanel;
    private javax.swing.JTextField updateLastNameTxt;
    private javax.swing.JComboBox<String> updateMonthTxt;
    private javax.swing.JTextField updatePhoneCodeTxt;
    private javax.swing.JTextField updatePhoneTxt;
    private javax.swing.JTextField updateYearTxt;
    private javax.swing.JRadioButton user;
    private javax.swing.JComboBox<String> userSelect;
    // End of variables declaration//GEN-END:variables
}
